# 問題文
# あるゲーム大会には
# N人が参加し
# M試合が行われました。各参加者には
# 1から
# Nの番号が割り当てられています。

# 試合に関する情報が与えられるので、
# M回の試合がすべて終了した時点での試合結果の表を作成し、出力してください。

# ただし、同じ参加者のペアについて2回以上試合が行われることはないとします。

# 試合に関する情報は以下のような形式で与えられます。

# 試合に関する情報
# 試合1で勝った人の番号
# A
# 1
# ​
#   試合1で負けた人の番号
# B
# 1
# ​

# 試合2で勝った人の番号
# A
# 2
# ​
#   試合2で負けた人の番号
# B
# 2
# ​

# ⋮
# ⋮
# 試合Mで勝った人の番号
# A
# M
# ​
#   試合Mで負けた人の番号
# B
# M
# ​

# 同じ参加者のペアについて2回以上試合が行われることはありません。
# 例えば、次のような情報が与えられることはありません。

# 1 2
# 2 1
# 試合結果の表とは、縦N行、横N列からなる次のような表
# Rです。

# 試合結果の表
# R
# 1,1
# ​

# R
# 1,2
# ​

# R
# 1,3
# ​

# ⋯
# R
# 1,N
# ​

# R
# 2,1
# ​

# R
# 2,2
# ​

# R
# 2,3
# ​

# ⋯
# R
# 2,N
# ​

# R
# 3,1
# ​

# R
# 3,2
# ​

# R
# 3,3
# ​

# ⋯
# R
# 3,N
# ​

# ⋮
# ⋮
# ⋮
# ⋮
# ⋱
# ⋮
# R
# N,1
# ​

# R
# N,2
# ​

# R
# N,3
# ​

# ⋯
# R
# N,N
# ​

# R
# i,j
# ​
# の値は以下のように決まります。

# i番の参加者と
# j番の参加者が試合をして、

# i番の参加者が勝ったなら
# R
# i,j
# ​
#   = o
# i番の負けたなら
# R
# i,j
# ​
#   = x
# i番の人と
# j番の人が試合を行っていない場合

# R
# i,j
# ​
#   = -
# 以下に具体例を示します。

# 具体例
# 3人が参加した
# 2試合行われた
# 試合に関する情報は次の通り
# 1 2
# 3 1
# この場合の試合結果の表は次のようになります。

# - o x
# x - -
# o - -
# 1番の人と2番の人が試合を行い、1番の人が勝ったので、
# R
# 1,2
# ​
#   = o、
# R
# 2,1
# ​
#   = x
# 3番の人と1番の人が試合を行い、3番の人が勝ったので、
# R
# 1,3
# ​
#   = x、
# R
# 3,1
# ​
#   = o
# ただし、各行の行末に空白を含まないことに注意してください。



N, M = gets.chomp.split.map(&:to_i)

game = Array.new(N) { Array.new(N, '-')}

M.times do
    a, b = gets.chomp.split.map(&:to_i)
    game[a - 1][b - 1] = 'o'
    game[b - 1][a - 1] = 'x'
end

N.times do |i|
  puts game[i].join(' ')
end



# Array.new(N) { Array.new(N, '-') } は、要素が '-' で初期化された N 行 N 列の二次元配列を作成するためのRubyの構文です。

# 具体的には、Array.new(N) で N 個の要素を持つ配列を作成し、それぞれの要素に対して Array.new(N, '-') を適用しています。これにより、N 個の行を持ち、それぞれの行が N 個の '-' で初期化された要素を持つ二次元配列が生成されます。

# 例えば、N が 3 の場合、以下のような二次元配列が生成されます:

# ruby
# Copy code
# [
#   ['-', '-', '-'],
#   ['-', '-', '-'],
#   ['-', '-', '-']
# ]




# table[b - 1][a - 1] は、二次元配列 table の特定の位置を参照しています。式の中の b - 1 は行のインデックスを表し、a - 1 は列のインデックスを表します。

# 具体的には、table[b - 1][a - 1] は table の行インデックスが b - 1、列インデックスが a - 1 の要素を参照しています。

# この式の意味は、参加者 b と参加者 a の試合結果を示す位置を参照していることです。例えば、table[2][1] は参加者 2 と参加者 1 の試合結果を表します。

# 注意点として、配列のインデックスは通常、0から始まるため、参加者番号から1を引いていることに注意してください。これは、参加者番号を配列のインデックスに合わせるための変換操作です。